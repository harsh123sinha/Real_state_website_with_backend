[
    {
        "label": "sys,",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys.",
        "description": "sys.",
        "detail": "sys.",
        "documentation": {}
    },
    {
        "label": "cgi",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cgi",
        "description": "cgi",
        "detail": "cgi",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "WSGIServer",
        "importPath": "wsgiref.simple_server",
        "description": "wsgiref.simple_server",
        "isExtraImport": true,
        "detail": "wsgiref.simple_server",
        "documentation": {}
    },
    {
        "label": "WSGIRequestHandler",
        "importPath": "wsgiref.simple_server",
        "description": "wsgiref.simple_server",
        "isExtraImport": true,
        "detail": "wsgiref.simple_server",
        "documentation": {}
    },
    {
        "label": "gettempdir",
        "importPath": "tempfile",
        "description": "tempfile",
        "isExtraImport": true,
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "with_statement",
        "importPath": "__future__",
        "description": "__future__",
        "isExtraImport": true,
        "detail": "__future__",
        "documentation": {}
    },
    {
        "label": "files",
        "importPath": "google.appengine.api",
        "description": "google.appengine.api",
        "isExtraImport": true,
        "detail": "google.appengine.api",
        "documentation": {}
    },
    {
        "label": "images",
        "importPath": "google.appengine.api",
        "description": "google.appengine.api",
        "isExtraImport": true,
        "detail": "google.appengine.api",
        "documentation": {}
    },
    {
        "label": "blobstore",
        "importPath": "google.appengine.ext",
        "description": "google.appengine.ext",
        "isExtraImport": true,
        "detail": "google.appengine.ext",
        "documentation": {}
    },
    {
        "label": "deferred",
        "importPath": "google.appengine.ext",
        "description": "google.appengine.ext",
        "isExtraImport": true,
        "detail": "google.appengine.ext",
        "documentation": {}
    },
    {
        "label": "blobstore_handlers",
        "importPath": "google.appengine.ext.webapp",
        "description": "google.appengine.ext.webapp",
        "isExtraImport": true,
        "detail": "google.appengine.ext.webapp",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "re",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "re",
        "description": "re",
        "detail": "re",
        "documentation": {}
    },
    {
        "label": "urllib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib",
        "description": "urllib",
        "detail": "urllib",
        "documentation": {}
    },
    {
        "label": "webapp2",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "webapp2",
        "description": "webapp2",
        "detail": "webapp2",
        "documentation": {}
    },
    {
        "label": "#version",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#version = ''\n# The full version, including alpha/beta/rc tags.\n#release = ''\n# If extensions (or modules to document with autodoc) are in another directory,\n# add these directories to sys.path here. If the directory is relative to the\n# documentation root, use os.path.abspath to make it absolute, like shown here.\n#sys.path.insert(0, os.path.abspath('.'))\n# -- General configuration -----------------------------------------------------\n# If your documentation needs a minimal Sphinx version, state it here.\n#needs_sphinx = '1.0'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#release",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#release = ''\n# If extensions (or modules to document with autodoc) are in another directory,\n# add these directories to sys.path here. If the directory is relative to the\n# documentation root, use os.path.abspath to make it absolute, like shown here.\n#sys.path.insert(0, os.path.abspath('.'))\n# -- General configuration -----------------------------------------------------\n# If your documentation needs a minimal Sphinx version, state it here.\n#needs_sphinx = '1.0'\nprimary_domain = 'js'\n# Add any Sphinx extension module names here, as strings. They can be extensions",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#needs_sphinx",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#needs_sphinx = '1.0'\nprimary_domain = 'js'\n# Add any Sphinx extension module names here, as strings. They can be extensions\n# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.\nextensions = []\n# Add any paths that contain templates here, relative to this directory.\ntemplates_path = ['_templates']\n# The suffix of source filenames.\nsource_suffix = '.rst'\n# The encoding of source files.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "primary_domain",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "primary_domain = 'js'\n# Add any Sphinx extension module names here, as strings. They can be extensions\n# coming with Sphinx (named 'sphinx.ext.*') or your custom ones.\nextensions = []\n# Add any paths that contain templates here, relative to this directory.\ntemplates_path = ['_templates']\n# The suffix of source filenames.\nsource_suffix = '.rst'\n# The encoding of source files.\n#source_encoding = 'utf-8-sig'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "extensions",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "extensions = []\n# Add any paths that contain templates here, relative to this directory.\ntemplates_path = ['_templates']\n# The suffix of source filenames.\nsource_suffix = '.rst'\n# The encoding of source files.\n#source_encoding = 'utf-8-sig'\n# The master toctree document.\nmaster_doc = 'index'\n# General information about the project.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "templates_path",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "templates_path = ['_templates']\n# The suffix of source filenames.\nsource_suffix = '.rst'\n# The encoding of source files.\n#source_encoding = 'utf-8-sig'\n# The master toctree document.\nmaster_doc = 'index'\n# General information about the project.\nproject = u'bootstrap-datepicker'\ncopyright = u'2013, eternicode'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "source_suffix",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "source_suffix = '.rst'\n# The encoding of source files.\n#source_encoding = 'utf-8-sig'\n# The master toctree document.\nmaster_doc = 'index'\n# General information about the project.\nproject = u'bootstrap-datepicker'\ncopyright = u'2013, eternicode'\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#source_encoding",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#source_encoding = 'utf-8-sig'\n# The master toctree document.\nmaster_doc = 'index'\n# General information about the project.\nproject = u'bootstrap-datepicker'\ncopyright = u'2013, eternicode'\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n#language = None\n# There are two options for replacing |today|: either, you set today to some",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "master_doc",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "master_doc = 'index'\n# General information about the project.\nproject = u'bootstrap-datepicker'\ncopyright = u'2013, eternicode'\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n#language = None\n# There are two options for replacing |today|: either, you set today to some\n# non-false value, then it is used:\n#today = ''",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "project",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "project = u'bootstrap-datepicker'\ncopyright = u'2013, eternicode'\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n#language = None\n# There are two options for replacing |today|: either, you set today to some\n# non-false value, then it is used:\n#today = ''\n# Else, today_fmt is used as the format for a strftime call.\n#today_fmt = '%B %d, %Y'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "copyright",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "copyright = u'2013, eternicode'\n# The language for content autogenerated by Sphinx. Refer to documentation\n# for a list of supported languages.\n#language = None\n# There are two options for replacing |today|: either, you set today to some\n# non-false value, then it is used:\n#today = ''\n# Else, today_fmt is used as the format for a strftime call.\n#today_fmt = '%B %d, %Y'\n# List of patterns, relative to source directory, that match files and",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#language",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#language = None\n# There are two options for replacing |today|: either, you set today to some\n# non-false value, then it is used:\n#today = ''\n# Else, today_fmt is used as the format for a strftime call.\n#today_fmt = '%B %d, %Y'\n# List of patterns, relative to source directory, that match files and\n# directories to ignore when looking for source files.\nexclude_patterns = ['_build']\n# The reST default role (used for this markup: `text`) to use for all documents.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#today",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#today = ''\n# Else, today_fmt is used as the format for a strftime call.\n#today_fmt = '%B %d, %Y'\n# List of patterns, relative to source directory, that match files and\n# directories to ignore when looking for source files.\nexclude_patterns = ['_build']\n# The reST default role (used for this markup: `text`) to use for all documents.\n#default_role = None\n# If true, '()' will be appended to :func: etc. cross-reference text.\n#add_function_parentheses = True",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#today_fmt",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#today_fmt = '%B %d, %Y'\n# List of patterns, relative to source directory, that match files and\n# directories to ignore when looking for source files.\nexclude_patterns = ['_build']\n# The reST default role (used for this markup: `text`) to use for all documents.\n#default_role = None\n# If true, '()' will be appended to :func: etc. cross-reference text.\n#add_function_parentheses = True\n# If true, the current module name will be prepended to all description\n# unit titles (such as .. function::).",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "exclude_patterns",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "exclude_patterns = ['_build']\n# The reST default role (used for this markup: `text`) to use for all documents.\n#default_role = None\n# If true, '()' will be appended to :func: etc. cross-reference text.\n#add_function_parentheses = True\n# If true, the current module name will be prepended to all description\n# unit titles (such as .. function::).\n#add_module_names = True\n# If true, sectionauthor and moduleauthor directives will be shown in the\n# output. They are ignored by default.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#default_role",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#default_role = None\n# If true, '()' will be appended to :func: etc. cross-reference text.\n#add_function_parentheses = True\n# If true, the current module name will be prepended to all description\n# unit titles (such as .. function::).\n#add_module_names = True\n# If true, sectionauthor and moduleauthor directives will be shown in the\n# output. They are ignored by default.\n#show_authors = False\n# The name of the Pygments (syntax highlighting) style to use.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#add_function_parentheses",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#add_function_parentheses = True\n# If true, the current module name will be prepended to all description\n# unit titles (such as .. function::).\n#add_module_names = True\n# If true, sectionauthor and moduleauthor directives will be shown in the\n# output. They are ignored by default.\n#show_authors = False\n# The name of the Pygments (syntax highlighting) style to use.\npygments_style = 'sphinx'\nhighlight_language = 'javascript'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#add_module_names",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#add_module_names = True\n# If true, sectionauthor and moduleauthor directives will be shown in the\n# output. They are ignored by default.\n#show_authors = False\n# The name of the Pygments (syntax highlighting) style to use.\npygments_style = 'sphinx'\nhighlight_language = 'javascript'\n# A list of ignored prefixes for module index sorting.\n#modindex_common_prefix = []\n# -- Options for HTML output ---------------------------------------------------",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#show_authors",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#show_authors = False\n# The name of the Pygments (syntax highlighting) style to use.\npygments_style = 'sphinx'\nhighlight_language = 'javascript'\n# A list of ignored prefixes for module index sorting.\n#modindex_common_prefix = []\n# -- Options for HTML output ---------------------------------------------------\n# The theme to use for HTML and HTML Help pages.  See the documentation for\n# a list of builtin themes.\nhtml_theme = 'default'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "pygments_style",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "pygments_style = 'sphinx'\nhighlight_language = 'javascript'\n# A list of ignored prefixes for module index sorting.\n#modindex_common_prefix = []\n# -- Options for HTML output ---------------------------------------------------\n# The theme to use for HTML and HTML Help pages.  See the documentation for\n# a list of builtin themes.\nhtml_theme = 'default'\n# Theme options are theme-specific and customize the look and feel of a theme\n# further.  For a list of options available for each theme, see the",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "highlight_language",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "highlight_language = 'javascript'\n# A list of ignored prefixes for module index sorting.\n#modindex_common_prefix = []\n# -- Options for HTML output ---------------------------------------------------\n# The theme to use for HTML and HTML Help pages.  See the documentation for\n# a list of builtin themes.\nhtml_theme = 'default'\n# Theme options are theme-specific and customize the look and feel of a theme\n# further.  For a list of options available for each theme, see the\n# documentation.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#modindex_common_prefix",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#modindex_common_prefix = []\n# -- Options for HTML output ---------------------------------------------------\n# The theme to use for HTML and HTML Help pages.  See the documentation for\n# a list of builtin themes.\nhtml_theme = 'default'\n# Theme options are theme-specific and customize the look and feel of a theme\n# further.  For a list of options available for each theme, see the\n# documentation.\n#html_theme_options = {}\n# Add any paths that contain custom themes here, relative to this directory.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "html_theme",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "html_theme = 'default'\n# Theme options are theme-specific and customize the look and feel of a theme\n# further.  For a list of options available for each theme, see the\n# documentation.\n#html_theme_options = {}\n# Add any paths that contain custom themes here, relative to this directory.\n#html_theme_path = []\n# The name for this set of Sphinx documents.  If None, it defaults to\n# \"<project> v<release> documentation\".\n#html_title = None",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_theme_options",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_theme_options = {}\n# Add any paths that contain custom themes here, relative to this directory.\n#html_theme_path = []\n# The name for this set of Sphinx documents.  If None, it defaults to\n# \"<project> v<release> documentation\".\n#html_title = None\n# A shorter title for the navigation bar.  Default is the same as html_title.\n#html_short_title = None\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_theme_path",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_theme_path = []\n# The name for this set of Sphinx documents.  If None, it defaults to\n# \"<project> v<release> documentation\".\n#html_title = None\n# A shorter title for the navigation bar.  Default is the same as html_title.\n#html_short_title = None\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#html_logo = None\n# The name of an image file (within the static path) to use as favicon of the",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_title",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_title = None\n# A shorter title for the navigation bar.  Default is the same as html_title.\n#html_short_title = None\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#html_logo = None\n# The name of an image file (within the static path) to use as favicon of the\n# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n# pixels large.\n#html_favicon = None",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_short_title",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_short_title = None\n# The name of an image file (relative to this directory) to place at the top\n# of the sidebar.\n#html_logo = None\n# The name of an image file (within the static path) to use as favicon of the\n# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n# pixels large.\n#html_favicon = None\n# Add any paths that contain custom static files (such as style sheets) here,\n# relative to this directory. They are copied after the builtin static files,",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_logo",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_logo = None\n# The name of an image file (within the static path) to use as favicon of the\n# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32\n# pixels large.\n#html_favicon = None\n# Add any paths that contain custom static files (such as style sheets) here,\n# relative to this directory. They are copied after the builtin static files,\n# so a file named \"default.css\" will overwrite the builtin \"default.css\".\nhtml_static_path = ['_static']\n# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_favicon",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_favicon = None\n# Add any paths that contain custom static files (such as style sheets) here,\n# relative to this directory. They are copied after the builtin static files,\n# so a file named \"default.css\" will overwrite the builtin \"default.css\".\nhtml_static_path = ['_static']\n# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,\n# using the given strftime format.\n#html_last_updated_fmt = '%b %d, %Y'\n# If true, SmartyPants will be used to convert quotes and dashes to\n# typographically correct entities.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "html_static_path",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "html_static_path = ['_static']\n# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,\n# using the given strftime format.\n#html_last_updated_fmt = '%b %d, %Y'\n# If true, SmartyPants will be used to convert quotes and dashes to\n# typographically correct entities.\n#html_use_smartypants = True\n# Custom sidebar templates, maps document names to template names.\n#html_sidebars = {}\n# Additional templates that should be rendered to pages, maps page names to",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_last_updated_fmt",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_last_updated_fmt = '%b %d, %Y'\n# If true, SmartyPants will be used to convert quotes and dashes to\n# typographically correct entities.\n#html_use_smartypants = True\n# Custom sidebar templates, maps document names to template names.\n#html_sidebars = {}\n# Additional templates that should be rendered to pages, maps page names to\n# template names.\n#html_additional_pages = {}\n# If false, no module index is generated.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_use_smartypants",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_use_smartypants = True\n# Custom sidebar templates, maps document names to template names.\n#html_sidebars = {}\n# Additional templates that should be rendered to pages, maps page names to\n# template names.\n#html_additional_pages = {}\n# If false, no module index is generated.\n#html_domain_indices = True\n# If false, no index is generated.\n#html_use_index = True",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_sidebars",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_sidebars = {}\n# Additional templates that should be rendered to pages, maps page names to\n# template names.\n#html_additional_pages = {}\n# If false, no module index is generated.\n#html_domain_indices = True\n# If false, no index is generated.\n#html_use_index = True\n# If true, the index is split into individual pages for each letter.\n#html_split_index = False",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_additional_pages",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_additional_pages = {}\n# If false, no module index is generated.\n#html_domain_indices = True\n# If false, no index is generated.\n#html_use_index = True\n# If true, the index is split into individual pages for each letter.\n#html_split_index = False\n# If true, links to the reST sources are added to the pages.\n#html_show_sourcelink = True\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_domain_indices",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_domain_indices = True\n# If false, no index is generated.\n#html_use_index = True\n# If true, the index is split into individual pages for each letter.\n#html_split_index = False\n# If true, links to the reST sources are added to the pages.\n#html_show_sourcelink = True\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n#html_show_sphinx = True\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_use_index",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_use_index = True\n# If true, the index is split into individual pages for each letter.\n#html_split_index = False\n# If true, links to the reST sources are added to the pages.\n#html_show_sourcelink = True\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n#html_show_sphinx = True\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n#html_show_copyright = True\n# If true, an OpenSearch description file will be output, and all pages will",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_split_index",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_split_index = False\n# If true, links to the reST sources are added to the pages.\n#html_show_sourcelink = True\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n#html_show_sphinx = True\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n#html_show_copyright = True\n# If true, an OpenSearch description file will be output, and all pages will\n# contain a <link> tag referring to it.  The value of this option must be the\n# base URL from which the finished HTML is served.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_show_sourcelink",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_show_sourcelink = True\n# If true, \"Created using Sphinx\" is shown in the HTML footer. Default is True.\n#html_show_sphinx = True\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n#html_show_copyright = True\n# If true, an OpenSearch description file will be output, and all pages will\n# contain a <link> tag referring to it.  The value of this option must be the\n# base URL from which the finished HTML is served.\n#html_use_opensearch = ''\n# This is the file name suffix for HTML files (e.g. \".xhtml\").",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_show_sphinx",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_show_sphinx = True\n# If true, \"(C) Copyright ...\" is shown in the HTML footer. Default is True.\n#html_show_copyright = True\n# If true, an OpenSearch description file will be output, and all pages will\n# contain a <link> tag referring to it.  The value of this option must be the\n# base URL from which the finished HTML is served.\n#html_use_opensearch = ''\n# This is the file name suffix for HTML files (e.g. \".xhtml\").\n#html_file_suffix = None\n# Output file base name for HTML help builder.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_show_copyright",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_show_copyright = True\n# If true, an OpenSearch description file will be output, and all pages will\n# contain a <link> tag referring to it.  The value of this option must be the\n# base URL from which the finished HTML is served.\n#html_use_opensearch = ''\n# This is the file name suffix for HTML files (e.g. \".xhtml\").\n#html_file_suffix = None\n# Output file base name for HTML help builder.\nhtmlhelp_basename = 'bootstrap-datepickerdoc'\n# -- Options for LaTeX output --------------------------------------------------",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_use_opensearch",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_use_opensearch = ''\n# This is the file name suffix for HTML files (e.g. \".xhtml\").\n#html_file_suffix = None\n# Output file base name for HTML help builder.\nhtmlhelp_basename = 'bootstrap-datepickerdoc'\n# -- Options for LaTeX output --------------------------------------------------\nlatex_elements = {\n# The paper size ('letterpaper' or 'a4paper').\n#'papersize': 'letterpaper',\n# The font size ('10pt', '11pt' or '12pt').",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#html_file_suffix",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#html_file_suffix = None\n# Output file base name for HTML help builder.\nhtmlhelp_basename = 'bootstrap-datepickerdoc'\n# -- Options for LaTeX output --------------------------------------------------\nlatex_elements = {\n# The paper size ('letterpaper' or 'a4paper').\n#'papersize': 'letterpaper',\n# The font size ('10pt', '11pt' or '12pt').\n#'pointsize': '10pt',\n# Additional stuff for the LaTeX preamble.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "htmlhelp_basename",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "htmlhelp_basename = 'bootstrap-datepickerdoc'\n# -- Options for LaTeX output --------------------------------------------------\nlatex_elements = {\n# The paper size ('letterpaper' or 'a4paper').\n#'papersize': 'letterpaper',\n# The font size ('10pt', '11pt' or '12pt').\n#'pointsize': '10pt',\n# Additional stuff for the LaTeX preamble.\n#'preamble': '',\n}",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "latex_elements",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "latex_elements = {\n# The paper size ('letterpaper' or 'a4paper').\n#'papersize': 'letterpaper',\n# The font size ('10pt', '11pt' or '12pt').\n#'pointsize': '10pt',\n# Additional stuff for the LaTeX preamble.\n#'preamble': '',\n}\n# Grouping the document tree into LaTeX files. List of tuples\n# (source start file, target name, title, author, documentclass [howto/manual]).",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "latex_documents",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "latex_documents = [\n  ('index', 'bootstrap-datepicker.tex', u'bootstrap-datepicker Documentation',\n   u'eternicode', 'manual'),\n]\n# The name of an image file (relative to this directory) to place at the top of\n# the title page.\n#latex_logo = None\n# For \"manual\" documents, if this is true, then toplevel headings are parts,\n# not chapters.\n#latex_use_parts = False",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#latex_logo",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#latex_logo = None\n# For \"manual\" documents, if this is true, then toplevel headings are parts,\n# not chapters.\n#latex_use_parts = False\n# If true, show page references after internal links.\n#latex_show_pagerefs = False\n# If true, show URL addresses after external links.\n#latex_show_urls = False\n# Documents to append as an appendix to all manuals.\n#latex_appendices = []",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#latex_use_parts",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#latex_use_parts = False\n# If true, show page references after internal links.\n#latex_show_pagerefs = False\n# If true, show URL addresses after external links.\n#latex_show_urls = False\n# Documents to append as an appendix to all manuals.\n#latex_appendices = []\n# If false, no module index is generated.\n#latex_domain_indices = True\n# -- Options for manual page output --------------------------------------------",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#latex_show_pagerefs",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#latex_show_pagerefs = False\n# If true, show URL addresses after external links.\n#latex_show_urls = False\n# Documents to append as an appendix to all manuals.\n#latex_appendices = []\n# If false, no module index is generated.\n#latex_domain_indices = True\n# -- Options for manual page output --------------------------------------------\n# One entry per manual page. List of tuples\n# (source start file, name, description, authors, manual section).",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#latex_show_urls",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#latex_show_urls = False\n# Documents to append as an appendix to all manuals.\n#latex_appendices = []\n# If false, no module index is generated.\n#latex_domain_indices = True\n# -- Options for manual page output --------------------------------------------\n# One entry per manual page. List of tuples\n# (source start file, name, description, authors, manual section).\nman_pages = [\n    ('index', 'bootstrap-datepicker', u'bootstrap-datepicker Documentation',",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#latex_appendices",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#latex_appendices = []\n# If false, no module index is generated.\n#latex_domain_indices = True\n# -- Options for manual page output --------------------------------------------\n# One entry per manual page. List of tuples\n# (source start file, name, description, authors, manual section).\nman_pages = [\n    ('index', 'bootstrap-datepicker', u'bootstrap-datepicker Documentation',\n     [u'eternicode'], 1)\n]",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#latex_domain_indices",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#latex_domain_indices = True\n# -- Options for manual page output --------------------------------------------\n# One entry per manual page. List of tuples\n# (source start file, name, description, authors, manual section).\nman_pages = [\n    ('index', 'bootstrap-datepicker', u'bootstrap-datepicker Documentation',\n     [u'eternicode'], 1)\n]\n# If true, show URL addresses after external links.\n#man_show_urls = False",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "man_pages",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "man_pages = [\n    ('index', 'bootstrap-datepicker', u'bootstrap-datepicker Documentation',\n     [u'eternicode'], 1)\n]\n# If true, show URL addresses after external links.\n#man_show_urls = False\n# -- Options for Texinfo output ------------------------------------------------\n# Grouping the document tree into Texinfo files. List of tuples\n# (source start file, target name, title, author,\n#  dir menu entry, description, category)",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#man_show_urls",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#man_show_urls = False\n# -- Options for Texinfo output ------------------------------------------------\n# Grouping the document tree into Texinfo files. List of tuples\n# (source start file, target name, title, author,\n#  dir menu entry, description, category)\ntexinfo_documents = [\n  ('index', 'bootstrap-datepicker', u'bootstrap-datepicker Documentation',\n   u'eternicode', 'bootstrap-datepicker', 'One line description of project.',\n   'Miscellaneous'),\n]",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "texinfo_documents",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "texinfo_documents = [\n  ('index', 'bootstrap-datepicker', u'bootstrap-datepicker Documentation',\n   u'eternicode', 'bootstrap-datepicker', 'One line description of project.',\n   'Miscellaneous'),\n]\n# Documents to append as an appendix to all manuals.\n#texinfo_appendices = []\n# If false, no module index is generated.\n#texinfo_domain_indices = True\n# How to display URL addresses: 'footnote', 'no', or 'inline'.",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#texinfo_appendices",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#texinfo_appendices = []\n# If false, no module index is generated.\n#texinfo_domain_indices = True\n# How to display URL addresses: 'footnote', 'no', or 'inline'.\n#texinfo_show_urls = 'footnote'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#texinfo_domain_indices",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#texinfo_domain_indices = True\n# How to display URL addresses: 'footnote', 'no', or 'inline'.\n#texinfo_show_urls = 'footnote'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "#texinfo_show_urls",
        "kind": 5,
        "importPath": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "description": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "peekOfCode": "#texinfo_show_urls = 'footnote'",
        "detail": "admin.assets.plugins.bootstrap-datepicker.docs.conf",
        "documentation": {}
    },
    {
        "label": "DynaTreeWsgiApp",
        "kind": 6,
        "importPath": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "description": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "peekOfCode": "class DynaTreeWsgiApp(object):\n    \"\"\"This WSGI application serves a file system hierarchy for dynatree.\"\"\"\n    def __init__(self, optionDict):\n        self.optionDict = optionDict\n    def __call__(self, environ, start_response):\n        \"\"\"Handle one HTTP request.\"\"\"\n        # Parse URL query into a list of 2-tuples (name, value) \n        argList = cgi.parse_qsl(environ.get(\"QUERY_STRING\", \"\"))\n        # Convert to dictionary {\"name\": \"value\", ... }\n        argDict = dict(argList)",
        "detail": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "documentation": {}
    },
    {
        "label": "make_server",
        "kind": 2,
        "importPath": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "description": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "peekOfCode": "def make_server(host, port, app, server_class=WSGIServer, handler_class=WSGIRequestHandler):\n    \"\"\"Create a new WSGI server listening on 'host' and 'port' for 'app'.\"\"\"\n    server = server_class((host, port), handler_class)\n    server.set_app(app)\n    return server\ndef main():  \n    # Configure root directory that will be exported:\n    rootPath = gettempdir()\n    if len(sys.argv) > 1:\n        rootPath =sys.argv[1]",
        "detail": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "description": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "peekOfCode": "def main():  \n    # Configure root directory that will be exported:\n    rootPath = gettempdir()\n    if len(sys.argv) > 1:\n        rootPath =sys.argv[1]\n#    rootPath = \"/temp\"\n    # Configure hostname and port on which the server will listen\n#    hostname = \"127.0.0.1\" # Use empty string for localhost (local access only)\n    hostname = \"\" # Use empty string for 0.0.0.0 (allows remote access)\n    port = 8001",
        "detail": "admin.assets.plugins.dynatree.doc.dynatree_server",
        "documentation": {}
    },
    {
        "label": "UploadHandler",
        "kind": 6,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "class UploadHandler(webapp2.RequestHandler):\n    def initialize(self, request, response):\n        super(UploadHandler, self).initialize(request, response)\n        self.response.headers['Access-Control-Allow-Origin'] = '*'\n        self.response.headers[\n            'Access-Control-Allow-Methods'\n        ] = 'OPTIONS, HEAD, GET, POST, PUT, DELETE'\n        self.response.headers[\n            'Access-Control-Allow-Headers'\n        ] = 'Content-Type, Content-Range, Content-Disposition'",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "DownloadHandler",
        "kind": 6,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "class DownloadHandler(blobstore_handlers.BlobstoreDownloadHandler):\n    def get(self, key, filename):\n        if not blobstore.get(key):\n            self.error(404)\n        else:\n            # Prevent browsers from MIME-sniffing the content-type:\n            self.response.headers['X-Content-Type-Options'] = 'nosniff'\n            # Cache for the expiration time:\n            self.response.headers['Cache-Control'] = 'public,max-age=%d' % EXPIRATION_TIME\n            # Send the file forcing a download dialog:",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "cleanup",
        "kind": 2,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "def cleanup(blob_keys):\n    blobstore.delete(blob_keys)\nclass UploadHandler(webapp2.RequestHandler):\n    def initialize(self, request, response):\n        super(UploadHandler, self).initialize(request, response)\n        self.response.headers['Access-Control-Allow-Origin'] = '*'\n        self.response.headers[\n            'Access-Control-Allow-Methods'\n        ] = 'OPTIONS, HEAD, GET, POST, PUT, DELETE'\n        self.response.headers[",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "WEBSITE",
        "kind": 5,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "WEBSITE = 'http://blueimp.github.io/jQuery-File-Upload/'\nMIN_FILE_SIZE = 1  # bytes\nMAX_FILE_SIZE = 5000000  # bytes\nIMAGE_TYPES = re.compile('image/(gif|p?jpeg|(x-)?png)')\nACCEPT_FILE_TYPES = IMAGE_TYPES\nTHUMBNAIL_MODIFICATOR = '=s80'  # max width / height\nEXPIRATION_TIME = 300  # seconds\ndef cleanup(blob_keys):\n    blobstore.delete(blob_keys)\nclass UploadHandler(webapp2.RequestHandler):",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "MIN_FILE_SIZE",
        "kind": 5,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "MIN_FILE_SIZE = 1  # bytes\nMAX_FILE_SIZE = 5000000  # bytes\nIMAGE_TYPES = re.compile('image/(gif|p?jpeg|(x-)?png)')\nACCEPT_FILE_TYPES = IMAGE_TYPES\nTHUMBNAIL_MODIFICATOR = '=s80'  # max width / height\nEXPIRATION_TIME = 300  # seconds\ndef cleanup(blob_keys):\n    blobstore.delete(blob_keys)\nclass UploadHandler(webapp2.RequestHandler):\n    def initialize(self, request, response):",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "MAX_FILE_SIZE",
        "kind": 5,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "MAX_FILE_SIZE = 5000000  # bytes\nIMAGE_TYPES = re.compile('image/(gif|p?jpeg|(x-)?png)')\nACCEPT_FILE_TYPES = IMAGE_TYPES\nTHUMBNAIL_MODIFICATOR = '=s80'  # max width / height\nEXPIRATION_TIME = 300  # seconds\ndef cleanup(blob_keys):\n    blobstore.delete(blob_keys)\nclass UploadHandler(webapp2.RequestHandler):\n    def initialize(self, request, response):\n        super(UploadHandler, self).initialize(request, response)",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "IMAGE_TYPES",
        "kind": 5,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "IMAGE_TYPES = re.compile('image/(gif|p?jpeg|(x-)?png)')\nACCEPT_FILE_TYPES = IMAGE_TYPES\nTHUMBNAIL_MODIFICATOR = '=s80'  # max width / height\nEXPIRATION_TIME = 300  # seconds\ndef cleanup(blob_keys):\n    blobstore.delete(blob_keys)\nclass UploadHandler(webapp2.RequestHandler):\n    def initialize(self, request, response):\n        super(UploadHandler, self).initialize(request, response)\n        self.response.headers['Access-Control-Allow-Origin'] = '*'",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "ACCEPT_FILE_TYPES",
        "kind": 5,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "ACCEPT_FILE_TYPES = IMAGE_TYPES\nTHUMBNAIL_MODIFICATOR = '=s80'  # max width / height\nEXPIRATION_TIME = 300  # seconds\ndef cleanup(blob_keys):\n    blobstore.delete(blob_keys)\nclass UploadHandler(webapp2.RequestHandler):\n    def initialize(self, request, response):\n        super(UploadHandler, self).initialize(request, response)\n        self.response.headers['Access-Control-Allow-Origin'] = '*'\n        self.response.headers[",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "THUMBNAIL_MODIFICATOR",
        "kind": 5,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "THUMBNAIL_MODIFICATOR = '=s80'  # max width / height\nEXPIRATION_TIME = 300  # seconds\ndef cleanup(blob_keys):\n    blobstore.delete(blob_keys)\nclass UploadHandler(webapp2.RequestHandler):\n    def initialize(self, request, response):\n        super(UploadHandler, self).initialize(request, response)\n        self.response.headers['Access-Control-Allow-Origin'] = '*'\n        self.response.headers[\n            'Access-Control-Allow-Methods'",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "EXPIRATION_TIME",
        "kind": 5,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "EXPIRATION_TIME = 300  # seconds\ndef cleanup(blob_keys):\n    blobstore.delete(blob_keys)\nclass UploadHandler(webapp2.RequestHandler):\n    def initialize(self, request, response):\n        super(UploadHandler, self).initialize(request, response)\n        self.response.headers['Access-Control-Allow-Origin'] = '*'\n        self.response.headers[\n            'Access-Control-Allow-Methods'\n        ] = 'OPTIONS, HEAD, GET, POST, PUT, DELETE'",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "description": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "peekOfCode": "app = webapp2.WSGIApplication(\n    [\n        ('/', UploadHandler),\n        ('/([^/]+)/([^/]+)', DownloadHandler)\n    ],\n    debug=True\n)",
        "detail": "admin.assets.plugins.jQuery-File-Upload.server.gae-python.main",
        "documentation": {}
    }
]